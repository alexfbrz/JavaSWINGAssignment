/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

/**
 *
 * @author alexf
 */
public class Calculator extends javax.swing.JApplet {

    double operand1 = -1;
    double operand2 = -1;
    double answer;
    String operator;
    String s;
    
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTF1 = new javax.swing.JTextField();
        b0 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        bP = new javax.swing.JButton();
        bS = new javax.swing.JButton();
        bM = new javax.swing.JButton();
        bD = new javax.swing.JButton();
        bE = new javax.swing.JButton();
        bClear = new javax.swing.JButton();

        jTF1.setEditable(false);
        jTF1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        b0.setBackground(new java.awt.Color(0, 255, 255));
        b0.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        b1.setBackground(new java.awt.Color(0, 255, 255));
        b1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setBackground(new java.awt.Color(0, 255, 255));
        b2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setBackground(new java.awt.Color(0, 255, 255));
        b3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setBackground(new java.awt.Color(0, 255, 255));
        b4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setBackground(new java.awt.Color(0, 255, 255));
        b5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setBackground(new java.awt.Color(0, 255, 255));
        b6.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b7.setBackground(new java.awt.Color(0, 255, 255));
        b7.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setBackground(new java.awt.Color(0, 255, 255));
        b8.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setBackground(new java.awt.Color(0, 255, 255));
        b9.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        bP.setBackground(new java.awt.Color(255, 0, 0));
        bP.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bP.setText("+");
        bP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPActionPerformed(evt);
            }
        });

        bS.setBackground(new java.awt.Color(255, 0, 0));
        bS.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bS.setText("-");
        bS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSActionPerformed(evt);
            }
        });

        bM.setBackground(new java.awt.Color(255, 0, 0));
        bM.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bM.setText("*");
        bM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMActionPerformed(evt);
            }
        });

        bD.setBackground(new java.awt.Color(255, 0, 0));
        bD.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bD.setText("/");
        bD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDActionPerformed(evt);
            }
        });

        bE.setBackground(new java.awt.Color(255, 0, 0));
        bE.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bE.setText("=");
        bE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEActionPerformed(evt);
            }
        });

        bClear.setBackground(new java.awt.Color(255, 0, 0));
        bClear.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bClear.setText("Clr");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTF1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(bM, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(b8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(b4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bS, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bClear)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b0)
                    .addComponent(b1)
                    .addComponent(b2)
                    .addComponent(b3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b4)
                    .addComponent(b5)
                    .addComponent(b6)
                    .addComponent(b7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b8)
                    .addComponent(b9)
                    .addComponent(bP)
                    .addComponent(bS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bM)
                    .addComponent(bD)
                    .addComponent(bE)
                    .addComponent(bClear))
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
       if(operand1 == -1)
        {
            operand1 = 3;
            s = "3";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 3;
            s = s +"3";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b3ActionPerformed

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b0ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 0;
            s = "0";
            jTF1.setText(s);
        }
       else if(operand1 != -1)
        {
            operand2 = 0;
            s = s +"0";
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b0ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 1;
            s = "1";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 1;
            s = s +"1";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 2;
            s = "2";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 2;
            s = s +"2";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b2ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 4;
            s = "4";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 4;
            s = s +"4";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 5;
            s = "5";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 5;
            s = s +"5";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 6;
            s = "6";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 6;
            s = s +"6";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 7;
            s = "7";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 7;
            s = s +"7";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 8;
            s = "8";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 8;
            s = s +"8";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        if(operand1 == -1)
        {
            operand1 = 9;
            s = "9";
            jTF1.setText(s);
        }
        else if(operand1 != -1)
        {
            operand2 = 9;
            s = s +"9";
            jTF1.setText(s);
        }
        else
        {
            s = "Number Overflow";
            jTF1.setText(s);
        }
    }//GEN-LAST:event_b9ActionPerformed

    private void bPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPActionPerformed
        operator = "+";
        s = s + "+";
        jTF1.setText(s);
    }//GEN-LAST:event_bPActionPerformed

    private void bSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSActionPerformed
        operator = "-";
        s = s + "-";
        jTF1.setText(s);
    }//GEN-LAST:event_bSActionPerformed

    private void bMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMActionPerformed
        operator = "*";
        s = s + "*";
        jTF1.setText(s);
    }//GEN-LAST:event_bMActionPerformed

    private void bDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDActionPerformed
        operator = "/";
        s = s + "/";
        jTF1.setText(s);
    }//GEN-LAST:event_bDActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        s = " ";
        operand1 = -1;
        operand2 = -1;
        jTF1.setText(s);
    }//GEN-LAST:event_bClearActionPerformed

    private void bEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEActionPerformed
        switch(operator)
        {
            case "+":
                answer = operand1 + operand2;
                s = Double.toString(answer);
                jTF1.setText(s);
                break;
            case "-":
                answer = operand1 - operand2;
                s = Double.toString(answer);
                jTF1.setText(s);
                break;
            case "*":
                answer = operand1 * operand2;
                s = Double.toString(answer);
                jTF1.setText(s);
                break;
            case "/":
                answer = operand1 / operand2;
                s = Double.toString(answer);
                jTF1.setText(s);
                break;
        }
    }//GEN-LAST:event_bEActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bD;
    private javax.swing.JButton bE;
    private javax.swing.JButton bM;
    private javax.swing.JButton bP;
    private javax.swing.JButton bS;
    private javax.swing.JTextField jTF1;
    // End of variables declaration//GEN-END:variables
}
